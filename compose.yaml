services:
  redis:
    container_name: redis
    image: 'redis:latest'
    ports:
      - "6379:6379"
    networks:
      - finstant-network
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - finstant-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - finstant-network

  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_DB: finanstream
      POSTGRES_USER: finanstream_user
      POSTGRES_PASSWORD: finanstream_pass
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - finstant-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - finstant-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    networks:
      - finstant-network

  finanstream:
    build:
      context: ./FinanStream
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    volumes:
      - ./config/rates.properties:/app/rates.properties
    environment:
      - RATES_CONFIG_PATH=file:/app/rates.properties
      - FINANSTREAM_PLATFORMS_PLATFORM1_HOST=platform1
      - FINANSTREAM_PLATFORMS_PLATFORM2_HOST=platform2
      - SPRING_DATA_REDIS_HOST=redis
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - finstant-network

  platform1_telnet:
    container_name: platform1
    build:
      context: ./Platform1_Telnet
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - finstant-network

  platform2_rest:
    container_name: platform2
    build:
      context: ./Platform2_REST
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - finstant-network

  kafka_consumer_1:
    container_name: kafka_consumer_1
    build:
      context: ./KafkaConsumer1_PostgreSQL_OpenSearch
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - postgres
      - elasticsearch
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/finanstream
      SPRING_DATASOURCE_USERNAME: finanstream_user
      SPRING_DATASOURCE_PASSWORD: finanstream_pass
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
      SPRING_ELASTICSEARCH_USERNAME:
      SPRING_ELASTICSEARCH_PASSWORD:
    networks:
      - finstant-network

  filebeat:
    build:
      context: ./filebeat
    container_name: filebeat
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - elasticsearch
    networks:
      - finstant-network

networks:
  finstant-network:
    driver: bridge

volumes:
  pgdata:
  elasticsearch-data: